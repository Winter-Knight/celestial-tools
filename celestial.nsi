; Script originally generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Celestial Tools"
!define PRODUCT_PUBLISHER "Brandon Barnes"
!define PRODUCT_WEB_SITE "https://www.github.com/Winter-Knight/celestial-tools"
!define KEY "Software\${PRODUCT_NAME}"
!define ROOTKEY "HKCU"
!define PRODUCT_VERSION "0.1"

!define DEPENDS_PATH "${HOME}/win32-depends/lib/"
!define BIN_PATH "/tmp/celestial-tools-win32-${PRODUCT_VERSION}/"
!define TERRAINJUMPER_EXE "terrainjumper.exe"
!define TERRAINJUMPER_GLFW_EXE "terrainjumper-glfw.exe"
!define EXPLORER_EXE "celestial-explorer.exe"
!define STARBOXCREATOR_EXE "starbox-creator.exe"

!include "MUI.nsh"
!include nsDialogs.nsh
!include LogicLib.nsh


Var CheckStartMenu
Var bStartMenu
Var CheckDesktop
Var bDesktop


; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "examples/images/program_icon.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; Directory page
!insertmacro MUI_PAGE_DIRECTORY

; Options page
Page custom Options OptionsNext

; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN "$INSTDIR\${TERRAINJUMPER_EXE}"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "Celestial-Tools-installer-${PRODUCT_VERSION}.exe"
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"
InstallDirRegKey ${ROOTKEY} "${KEY}" ""
!define StartMenuFolder "${PRODUCT_NAME}"
ShowInstDetails show
ShowUnInstDetails show

Section "MainSection" SEC01
	SetOverwrite ifnewer

;	SetOutPath "$INSTDIR\images"
;	File /r examples\images\*
;	SetOutPath "$INSTDIR\shaders"
;	File /r shaders\*
;	SetOutPath "$INSTDIR"
;	File /r 
;	File "${BIN_PATH}${TERRAINJUMPER_EXE}"
;	File "${BIN_PATH}${EXPLORER_EXE}"
;	File "${BIN_PATH}${TERRAINJUMPER_GLFW_EXE}"
;	File "${BIN_PATH}${STARBOXCREATOR_EXE}"
;	File LICENSE
	SetOutPath "$INSTDIR\"
	File /r "${BIN_PATH}\*"

	${If} $bStartMenu == True
		CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"

		SetOutPath "$INSTDIR\"

		CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Terrain Jumper.lnk" "$INSTDIR\${TERRAINJUMPER_EXE}"
		CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Terrain Jumper GLFW.lnk" "$INSTDIR\${TERRAINJUMPER_GLFW_EXE}"
		CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Celestial Explorer.lnk" "$INSTDIR\${EXPLORER_EXE}"
		CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Starbox Creator.lnk" "$INSTDIR\${STARBOXCREATOR_EXE}"
		CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\uninst.exe"
	${EndIf}

	${If} $bDesktop == True
;		CreateShortCut "$DESKTOP\${PRODUCT_NAME}.lnk" "$INSTDIR\${EXE_NAME}"
	${EndIf}

SectionEnd

Section -Post
	WriteUninstaller "$INSTDIR\uninst.exe"
	WriteRegStr ${ROOTKEY} "${KEY}" "" "$INSTDIR\"
	WriteRegStr ${ROOTKEY} "${KEY}" "UninstallString" "$INSTDIR\uninst.exe"
	WriteRegStr ${ROOTKEY} "${KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
	WriteRegStr ${ROOTKEY} "${KEY}" "Publisher" "${PRODUCT_PUBLISHER}"

	;Store installation folder
	WriteRegStr ${ROOTKEY} "Software\Modern UI Test" "" $INSTDIR
SectionEnd


Function un.onInit
	MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
	Abort
FunctionEnd

Section Uninstall

;	Delete "$DESKTOP\${PRODUCT_NAME}.lnk"

	RMDir /r "$SMPROGRAMS\${PRODUCT_NAME}"
	RMDir /r "$INSTDIR"

	DeleteRegKey ${ROOTKEY} "${KEY}"
	SetAutoClose false
SectionEnd

Function Options
	; Read more about how to use nsDialogs at:
	; http://nsis.sourceforge.net/Docs/nsDialogs/Readme.html

	nsDialogs::Create /NOUNLOAD 1018
	Pop $0

	${If} $0 == error
		Abort
	${EndIf}

	${NSD_CreateCheckbox} 0 0 100% 12u "Install Start Menu Icons"
	Pop $CheckStartMenu
	${NSD_Check} $CheckStartMenu

	${NSD_CreateCheckbox} 0 13u 100% 12u "Install Desktop Icon"
	Pop $CheckDesktop
	${NSD_Check} $CheckDesktop

	nsDialogs::Show

FunctionEnd

Function OptionsNext

	${NSD_GetState} $CheckStartMenu $0
	${If} $0 == ${BST_CHECKED}
		StrCpy $bStartMenu True
	${EndIf}

	${NSD_GetState} $CheckDesktop $0
	${If} $0 == ${BST_CHECKED}
		StrCpy $bDesktop True
	${EndIf}

FunctionEnd
